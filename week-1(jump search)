#include<iostream>
#include<cmath>

using namespace std;
int jumpSearch(int array[], int size, int key) {
   int start = 0;
   int end = sqrt(size); //the square root of array length

   while(array[end] <= key && end < size) {
      start = end; //it it is not correct block then shift block
      end += sqrt(size);
      if(end > size - 1)
         end = size; //if right exceeds then bound the range
   }

   for(int i = start; i<end; i++) { //perform linear search in selected block
      if(array[i] == key)
         return i; //the correct position of the key
   }
   return -1;
}

int main() {
   int n, k, loc,num;
 
   cin >> num;
   
  
for(int i=0;i<num;i++)
{
   cin>>n;
   int arr[n];

   for(int i = 0; i< n; i++) {
      cin >> arr[i];
   }

  
   cin >> k;
   if((loc = jumpSearch(arr, n,k)) >= 0)
      cout << "Present " << loc+1<< endl;
   else
      cout << "Not Present " << n << endl;
}

}
